---
name: CI 

on:
  push:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Add OS Dependencies
        shell: bash
        run: |
          sudo apt install -y protobuf-compiler

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt
          target:  wasm32-unknown-unknown
          toolchain: 1.77

      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Add Rust Deps
        shell: bash
        run: |
          rustup component add rust-src --toolchain 1.77-x86_64-unknown-linux-gnu
          rustup component add clippy --toolchain 1.77-x86_64-unknown-linux-gnu

      - name: Add Cargo Make
        if: steps.cache.outputs.cache-hit != 'true'
        shell: bash
        run: |
          cargo install --no-default-features cargo-make

      - name: Add Cargo Contract
        if: steps.cache.outputs.cache-hit != 'true'
        shell: bash
        run: |
          cargo install --locked cargo-contract

      - name: git status
        shell: bash
        run: |
          git status

      - name: Cargo Build
        shell: bash
        run: |
          cargo make cargo-build

      - name: git status
        shell: bash
        run: |
          git status

      # - name: Unit Tests
      #   shell: bash
      #   run: cargo test

      # - name: Contract Integration Tests
      #   shell: bash
      #   run: cargo make test-contract

      - uses: actions/cache/save@v4
        if: always()
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}


