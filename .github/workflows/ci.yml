---
name: CI 

on:
  push:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache: false

      - uses: actions/cache@v4
        id: cache
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # - name: Add Cargo Make
      #   if: steps.cache.outputs.cache-hit != 'true'
      #   shell: bash
      #   run: |
      #     cargo install --no-default-features cargo-make

      - name: Docker Build Builder
        if: steps.cache.outputs.cache-hit != 'true'
        shell: bash
        run: |
          docker build . -f docker/bruja_builder.Dockerfile -t bruja_builder

      - name: Build Project
        if: steps.cache.outputs.cache-hit != 'true'
        shell: bash
        run: |
          docker run \
            -v $(pwd)/target:/target \
            -v $(pwd)/Cargo.toml:/Cargo.toml \
            -v $(pwd)/crates:/crates \
            -v $(pwd)/chain.scale:/chain.scale \
            -v ~/.cargo/registry:$HOME/.cargo/registry \
            -v ~/.cargo/git:$HOME/.cargo/git \
            bruja_builder cargo build --exclude scripts --exclude catalog --workspace --release

      # - name: Unit Tests
      #   shell: bash
      #   run: cargo test

      # - name: Contract Integration Tests
      #   shell: bash
      #   run: cargo make test-contract

      # - uses: actions/cache/save@v4
      #   with:
      #     path: |
      #       ~/.cargo/bin/
      #       ~/.cargo/registry/index/
      #       ~/.cargo/registry/cache/
      #       ~/.cargo/git/db/
      #       target/
      #     key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}


